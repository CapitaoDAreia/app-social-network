version: "3.8"

networks:
  main:
    driver: bridge

services:
  backend:
    build: backend/.
    env_file:
      - ./backend/.env
    ports:
      - 3000:3000
    volumes:
      - ./backend:/usr/src/app-backend
    command: air backend/cmd/main.go
    networks:
      - main
    depends_on:
      mysql_database:
        condition: service_healthy
      mongo_database:
        condition: service_healthy

  frontend:
    build: frontend/.
    ports:
      - 8080:800
    networks:
      - main
    depends_on:
      - backend

  mysql_database:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME_DATABASE}
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h mysql_database --silent"]
      interval: 5s
      retries: 10
    volumes:
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/initiate_db.sql
    networks:
      - main

  mongo_database:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME_DATABASE}
    ports:
      - 27017:27017
    healthcheck:
      test:  echo 'db.stats().ok' | mongosh mongo_database:27017/${DB_NAME_DATABASE} --quiet
      interval: 5s
      retries: 5
      timeout: 10s
    networks:
      - main